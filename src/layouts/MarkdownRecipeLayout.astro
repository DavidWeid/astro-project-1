---
import Layout from './Layout.astro';
import Hero from '../components/Hero.astro';
interface Props {
  frontmatter: {
    title: string;
    description: string;
    source: string;
    pubDate: Date;
    author: string;
    image: {
      url: string;
      alt: string;
    };
    tags: string[];
    servings: string;
    prepTime: string;
    cookTime: string;
    totalTime: string;
    ingredients: string[];
    instructions: string[];
  };
}

const { frontmatter } = Astro.props;
const {
  title,
  description,
  source,
  pubDate,
  author,
  image,
  tags,
  servings,
  prepTime,
  cookTime,
  totalTime,
  ingredients,
  instructions
} = frontmatter;
const heroTitle = title;
const heroDescription = description;
---

<Layout title={title}>
  <Hero title={heroTitle} description={heroDescription}>
    <span class='block pb-4'></span>
    <div class='flex flex-wrap justify-center gap-8'>
      <span class='flex flex-col gap-0.5 items-center'>
        <span class='text-gradient font-bold text-lg'>PREP TIME</span>
        {prepTime}
      </span>
      <span class='flex flex-col gap-0.5 items-center'>
        <span class='text-gradient font-bold text-lg'>TOTAL TIME</span>
        {totalTime}
      </span>
      <span class='flex flex-col gap-0.5 items-center'>
        <span class='text-gradient font-bold text-lg'>SERVINGS</span>
        {servings}
      </span>
    </div>
  </Hero>

  <hr class='border-accent' />

  <div class='bg-medium'>
    <section class='container'>
      <span class='block pb-8'></span>

      <div class='grid grid-cols-1 laptop:grid-cols-3 gap-8 relative'>
        {
          ingredients && (
            <fieldset class='laptop:overflow-scroll laptop:max-h-screen laptop:sticky laptop:top-0'>
              <legend class='text-2xl font-bold'>Ingredients</legend>
              <span class='block pb-8' />
              <div class='flex flex-col gap-2'>
                {ingredients.map((ingredient, index) => (
                  <div class="hover:text-accent-light">
                    <input id=`ingredient-${index}` type="checkbox" class="sr-only peer">
                    <label for=`ingredient-${index}` class="peer-checked:text-white/40">{ingredient}</label>
                  </div>
                ))}
              </div>
            </fieldset>
          )
        }

        {
          instructions && (
            <div class='laptop:col-span-2'>
              <h2 class='text-2xl font-bold'>Instructions</h2>
              <span class='block pb-8' />
              <ol class='flex flex-col gap-6'>
                {instructions.map((instruction, index) => (
                  <li class='flex flex-col gap-2'>
                    <span class='text-lg font-bold tracking-wider text-white/85'>
                      Step {index + 1}
                    </span>
                    <span class='leading-7'>{instruction}</span>
                    <hr class='border-accent/40 w-1/4' />
                  </li>
                ))}
              </ol>
            </div>
          )
        }
      </div>

      <span class='block pb-8'></span>
      <slot />
      <span class='block pb-16'></span>
    </section>
  </div>
</Layout>
